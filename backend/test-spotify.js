// test-spotify.js - –§–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
import dotenv from 'dotenv';
dotenv.config();

async function testSpotifyConnection() {
  console.log('üéµ Testing Spotify API connection...\n');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
  const clientId = process.env.SPOTIFY_CLIENT_ID;
  const clientSecret = process.env.SPOTIFY_CLIENT_SECRET;
  const redirectUri = process.env.SPOTIFY_REDIRECT_URI;

  console.log('üìã Environment Variables:');
  console.log(`Client ID: ${clientId ? '‚úÖ Set' : '‚ùå Missing'}`);
  console.log(`Client Secret: ${clientSecret ? '‚úÖ Set' : '‚ùå Missing'}`);
  console.log(`Redirect URI: ${redirectUri || '‚ùå Missing'}\n`);

  if (!clientId || !clientSecret) {
    console.log('‚ùå Missing required environment variables!');
    console.log('Please check your .env.local file');
    return;
  }

  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
  try {
    console.log('üîë Getting access token...');
    
    const credentials = Buffer.from(`${clientId}:${clientSecret}`).toString('base64');
    
    const response = await fetch('https://accounts.spotify.com/api/token', {
      method: 'POST',
      headers: {
        'Authorization': `Basic ${credentials}`,
        'Content-Type': 'application/x-www-form-urlencoded'
      },
      body: 'grant_type=client_credentials'
    });

    if (!response.ok) {
      throw new Error(`HTTP ${response.status}: ${response.statusText}`);
    }

    const tokenData = await response.json();
    console.log('‚úÖ Access token received successfully!');
    console.log(`Token type: ${tokenData.token_type}`);
    console.log(`Expires in: ${tokenData.expires_in} seconds\n`);

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º API –∑–∞–ø—Ä–æ—Å
    console.log('üîç Testing search API...');
    
    const searchResponse = await fetch('https://api.spotify.com/v1/search?q=test&type=track&limit=1', {
      headers: {
        'Authorization': `Bearer ${tokenData.access_token}`
      }
    });

    if (!searchResponse.ok) {
      throw new Error(`Search API error: ${searchResponse.status}`);
    }

    const searchData = await searchResponse.json();
    const track = searchData.tracks.items[0];
    
    if (track) {
      console.log('‚úÖ Search API working!');
      console.log(`Found track: "${track.name}" by ${track.artists[0].name}`);
    } else {
      console.log('‚ö†Ô∏è Search API working but no results found');
    }

    console.log('\nüéâ Spotify integration is ready to use!');
    
  } catch (error) {
    console.log('‚ùå Error testing Spotify API:');
    console.log(error.message);
    
    if (error.message.includes('401')) {
      console.log('\nüí° Possible solutions:');
      console.log('- Check if Client ID and Client Secret are correct');
      console.log('- Make sure there are no extra spaces in .env.local');
      console.log('- Verify your app is not in development mode restrictions');
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testSpotifyConnection().catch(console.error);